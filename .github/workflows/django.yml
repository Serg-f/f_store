name: Django CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-22.04

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    environment:
      name: secrets_project

    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.10']
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}

      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_USE_SSL: ${{ secrets.EMAIL_USE_SSL }}

      STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

      GIT_CLIENT_ID: ${{ secrets.GIT_CLIENT_ID }}
      GIT_SECRET: ${{ secrets.GIT_SECRET }}


    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: secrets_project
    env:
      KEY: ${{ secrets.CD_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Debug
        run: echo "key:${CD_KEY}"

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CD_HOST }}
          username: ${{ secrets.CD_USERNAME }}
          key: ${{ secrets.CD_KEY }}
          script: |
            cd /var/www/f_store
            git pull
            sudo systemctl restart gunicorn